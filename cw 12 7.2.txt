zadanie 7.2.1

#include <stdio.h>
#include <stdlib.h>

struct trojkat
{
    float a;
    float b;
    float c;
};

float obwod(struct trojkat argument)
{
    return argument.a+argument.b+argument.c;
}

int main()
{
    struct trojkat zmienna = {3.4,4.2,4.3};
    printf("%f\n",obwod(zmienna));
    return 0;
}

zadanie 7.2.3
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

struct punkt{
    float x,y,z;
};

float odleglosc(struct punkt p1, struct punkt p2)
{
    return sqrt((p1.x-p2.x)*(p1.x-p2.x)+(p1.y-p2.y)*(p1.y-p2.y)+(p1.z-p2.z)*(p1.z-p2.z));
}

float foo(int n,struct punkt tab[])
{
    float temp=odleglosc(tab[0],tab[1]);
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<n;j++)
        {
            if (i!=j)
            {
                if (temp>odleglosc(tab[i],tab[j]))
                {
                    temp=odleglosc(tab[i],tab[j]);
                }
            }
        }
    }
    return temp;
}

int main()
{
    struct punkt p1 = {0,0,0};
    struct punkt p2 = {0,0,1};
    struct punkt p3 = {0,0,33};
    struct punkt tablica[3] = {p1,p2,p3};
    printf("%f\n",foo(3,tablica));
    return 0;
}

zadanie 7.2.4

#include <stdio.h>
#include <stdlib.h>

struct punkt{
    float x,y,z;
};

void foo(int n,struct punkt tab1[], struct punkt tab2[])
{
    for(int i=0;i<n;i++)
    {
        tab2[i]=tab1[i];
    }
}

void opispunkt(struct punkt pt)
{
    printf("%f %f %f\n",pt.x,pt.y,pt.z);
}

void wyswietlTablicePunktow(int n, struct punkt tab[])
{
    for(int i=0;i<n;i++)
    {
        printf("%d:",i);
        opispunkt(tab[i]);
    }
    printf("---\n");
}

int main()
{
    struct punkt tablica1[4] = { {2,3.4,2.4}, {2,43.4,2.4},{2,53.4,2.64},{52,3.456,2.4}};
    struct punkt tablica2[4] = { {2,22.3,2.4}, {32,-3.4,2.434},{2,34534.4,2.4},{42,3.34,23.4}};
    wyswietlTablicePunktow(4,tablica1);
    wyswietlTablicePunktow(4,tablica2);
    foo(4,tablica1,tablica2);
    wyswietlTablicePunktow(4,tablica1);
    wyswietlTablicePunktow(4,tablica2);
    return 0;
}

zadanie 7.2.5

#include <stdio.h>
#include <stdlib.h>

struct punkt10{
    float tab[10];
};

void foo(int n,struct punkt10 tab1[], struct punkt10 tab2[])
{
    for(int i=0;i<n;i++)
    {
        tab2[i]=tab1[i];
    }
}

void opispunkt(struct punkt10 pt)
{
    for(int i=0;i<10;i++)
    {
        printf("%f ",pt.tab[i]);
    }
    printf("\n");
}

void wyswietlTablicePunktow(int n, struct punkt10 tablica[])
{
    for(int i=0;i<n;i++)
    {
        printf("%d:",i);
        opispunkt(tablica[i]);
    }
    printf("---\n");
}

int main()
{
    struct punkt10 punkcik[]={{12.5,3,4,5,5,-2.3,2,1,6,7},{4,3,4,-7,5,8.3,2,9,6,-7},{14,3,24,-7,25,8.3,22,9,6,-7}};
    struct punkt10 punkcik2[]={{2,3,42,5,25,-2.3,2,1,6,7},{24,35,34,-7,55,8.3,25,9,6,-7},{414,3,24,-74,25,8.3,22,94,6,-7}};
    wyswietlTablicePunktow(3,punkcik);
    wyswietlTablicePunktow(3,punkcik2);
    foo(3,punkcik,punkcik2);
    wyswietlTablicePunktow(3,punkcik);
    wyswietlTablicePunktow(3,punkcik2);
    return 0;
}

zadanie 7.2.10
#include <stdio.h>
#include <stdlib.h>

union super_int
{
    int a;
    unsigned int b;
};

int main()
{
    union super_int zm;
    zm.a=4;
    printf("%d\n",zm.a);
    printf("%u\n",zm.b);
    zm.b=23;
    printf("%d\n",zm.a);
    printf("%u\n",zm.b);
    zm.a=-55;
    printf("%d\n",zm.a);
    printf("%u\n",zm.b);
    return 0;
}

zadanie 7.2.11

#include <stdio.h>
#include <stdlib.h>

union Liczba
{
    int a;
    float b;
};

struct Dane
{
    int tp;
    union Liczba zaw;
};

struct Dane wczytaj()
{
    struct Dane temp;
    printf("Jesli chcesz wpisac l. calkowita, wpisz 0, jesli wymierna, wpisz 1 \n");
    scanf("%d",&temp.tp);
    if (temp.tp==0)
    {
        printf("wpisz liczbe calk.\n");
        scanf("%d",&temp.zaw.a);
    }
    else
    {
        printf("wpisz liczbe wymierna\n");
        scanf("%f",&temp.zaw.b);
    }
    return temp;
}

void wyswietl(struct Dane temp)
{
    if (temp.tp==0)
    {
        printf("%d\n",temp.zaw.a);
    }
    else
    {
        printf("%f\n",temp.zaw.b);
    }
}

int main()
{
    struct Dane zm;
    zm=wczytaj();
    wyswietl(zm);
    return 0;
}

zadanie 7.2.11
#include <stdio.h>
#include <stdlib.h>

union extrauint
{
    unsigned int a;
    unsigned char tab[4];
};

int main()
{
    union extrauint zmienna;
    zmienna.a=0x41424344;
    printf("%u\n",zmienna.a);
    printf("%c\n",zmienna.tab[0]);
    printf("%c\n",zmienna.tab[1]);
    printf("%c\n",zmienna.tab[2]);
    printf("%c\n",zmienna.tab[3]);
    return 0;
}
zadanie 7.2.15

#include <stdio.h>
#include <stdlib.h>

enum zwierzak { PIES, KOT, PAPUGA, CHOMIK};

int main()
{
    enum zwierzak zmienna = PAPUGA;
    printf("%d\n",zmienna);
    return 0;
}


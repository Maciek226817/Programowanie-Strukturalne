zadanie 7.3.3

#include <stdio.h>
#include <stdlib.h>

struct element
{
    int i;
    struct element * next;
};

struct element* dodaj(struct element*Lista, int a)
{
    struct element*wsk= malloc(sizeof(struct element));
    wsk->i=a;
    wsk->next=Lista;
    return wsk;
};

struct element * utworz()
{
    return NULL;
};

void wyswietlListeBezGlowy(struct element*Lista)
{
    struct element*temp=Lista;
    if (temp==NULL)
    {
        printf("Lista jest pusta\n");
    }
    while(temp!=NULL)
    {
        printf("%d\n",temp->i);
        temp=temp->next;
    }
    printf("---\n");
}

void wyswietlListeBezGlowy2(struct element*Lista)
{
    if (Lista==NULL)
    {
        printf("Lista jest pusta\n");
    }
    while(Lista!=NULL)
    {
        printf("%d\n",Lista->i);
        Lista=Lista->next;
    }
    printf("---\n");
}

int main()
{
    struct element* l1 = utworz();
    wyswietlListeBezGlowy2(l1);
    l1=dodaj(l1,2);
    wyswietlListeBezGlowy2(l1);
    l1=dodaj(l1,-3);
    l1=dodaj(l1,14);
    wyswietlListeBezGlowy2(l1);
    return 0;
}

zadanie 7.3.12

include <stdio.h>
#include <stdlib.h>

struct element
{
    int i;
    struct element * next;
};

void dodaj(struct element*Lista, int a)
{
    struct element*wsk= malloc(sizeof(struct element));
    wsk->i=a;
    wsk->next=Lista->next;
    Lista->next=wsk;
};

struct element * utworz()
{
    struct element*wsk=malloc(sizeof(struct element));
    wsk->next=NULL;
    return wsk;
};

void wyswietlListeZglowa(struct element*Lista)
{
    struct element*temp=Lista->next;
    if (temp==NULL)
    {
        printf("Lista jest pusta\n");
    }
    while(temp!=NULL)
    {
        printf("%d\n",temp->i);
        temp=temp->next;
    }
    printf("---\n");
}

int main()
{
    struct element* l1 = utworz();
    wyswietlListeZglowa(l1);
    dodaj(l1,2);
    wyswietlListeZglowa(l1);
    dodaj(l1,-3);
    dodaj(l1,14);
    wyswietlListeZglowa(l1);
    return 0;
}

zadanie 7.3.2


#include <stdio.h>
#include <stdlib.h>

struct element
{
    int i;
    struct element * next;
};

struct element* dodaj(struct element*Lista, int a)
{
    struct element*wsk= malloc(sizeof(struct element));
    wsk->i=a;
    wsk->next=Lista;
    return wsk;
};

void wyswietlListeBezGlowy(struct element*Lista)
{
    struct element*temp=Lista;
    if (temp==NULL)
    {
        printf("Lista jest pusta\n");
    }
    while(temp!=NULL)
    {
        printf("%d\n",temp->i);
        temp=temp->next;
    }
    printf("---\n");
}

struct element * utworz()
{
    return NULL;
};

struct element* wyczysc(struct element*Lista)
{
    struct element*wsk=Lista;
    while(Lista!=NULL)
    {
        Lista=Lista->next;
        free(wsk);
        wsk=Lista;
    }
    Lista=NULL;
    return Lista;
}

int main()
{
    struct element* l1 = utworz();
    wyswietlListeBezGlowy(l1);
    l1=dodaj(l1,2);
    wyswietlListeBezGlowy(l1);
    l1=dodaj(l1,-3);
    l1=dodaj(l1,14);
    wyswietlListeBezGlowy(l1);
    l1=wyczysc(l1);
    wyswietlListeBezGlowy(l1);
    struct element*l2=malloc(sizeof(struct element));
    l2->i=2;
    l2->next=malloc(sizeof(struct element));
    l2->next->i=-3;
    l2->next->next=malloc(sizeof(struct element));
    l2->next->next->i=11;
    l2->next->next->next=NULL;
    wyswietlListeBezGlowy(l2);
    l2=wyczysc(l2);
    wyswietlListeBezGlowy(l2);
    return 0;
}

zadanie 7.3.11

#include <stdio.h>
#include <stdlib.h>

struct element
{
    int i;
    struct element * next;
};

void dodaj(struct element*Lista, int a)
{
    struct element*wsk= malloc(sizeof(struct element));
    wsk->i=a;
    wsk->next=Lista->next;
    Lista->next=wsk;
};

struct element * utworz()
{
    struct element*wsk=malloc(sizeof(struct element));
    wsk->next=NULL;
    return wsk;
};

void wyswietlListeZglowa(struct element*Lista)
{
    struct element*temp=Lista->next;
    if (temp==NULL)
    {
        printf("Lista jest pusta\n");
    }
    while(temp!=NULL)
    {
        printf("%d\n",temp->i);
        temp=temp->next;
    }
    printf("---\n");
}

void wyczysc(struct element*Lista)
{
    struct element*wsk=Lista->next;
    struct element*wsk2=Lista->next;
    while(wsk2!=NULL)
    {
        wsk2=wsk2->next;
        free(wsk);
        wsk=wsk2;
    }
    Lista->next=NULL;
}

int main()
{
    struct element* l1 = utworz();
    wyswietlListeZglowa(l1);
    dodaj(l1,2);
    wyswietlListeZglowa(l1);
    dodaj(l1,-3);
    dodaj(l1,14);
    wyswietlListeZglowa(l1);
    wyczysc(l1);
    wyswietlListeZglowa(l1);
    struct element*l2=malloc(sizeof(struct element));
    l2->next=malloc(sizeof(struct element));
    l2->next->i=2;
    l2->next->next=malloc(sizeof(struct element));
    l2->next->next->i=-33;
    l2->next->next->next=malloc(sizeof(struct element));
    l2->next->next->next->i=77;
    l2->next->next->next->next=NULL;
    wyswietlListeZglowa(l2);
    wyczysc(l2);
    wyswietlListeZglowa(l2);
    return 0;
}